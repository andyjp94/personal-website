stages:
  - lint
  - build
  - test
  # - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - frontend/node_modules/
  - infra/.terraform

image: 
  name: hashicorp/terraform:0.11.13
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

before_script:
  - while read line; do repo=$(echo "${line}" | cut -d ',' -f 1); version=$(echo "${line}" | cut -d ',' -f 2); sed -i "s~\(${repo}?ref=\)~\0${version}~g" infra/*.tf; done < infra/terraform_version.cf

Lint terraform:
  stage: lint
  script:
    - terraform --version
    - terraform init infra
    - terraform validate -var domain_name="andrewjohnperry.com" infra

Lint Javascript:
  image: node:10-alpine
  stage: lint
  script: yarn lint --max-warnings 1 # exit code will be non zero if there are any warnings
  only:
    changes:
      - frontend/**/*
  before_script:
    - cd frontend
    - yarn install

Production build:
  image: node:10-alpine
  stage: build
  script: yarn build
  only:
    changes:
      - frontend/**/*
  before_script:
    - cd frontend
    - yarn install

Security test:
  image: node:10-alpine
  stage: test
  script:
    - yarn add snyk
    - npx snyk test
  only:
    changes:
      - frontend/**/*
  before_script:
    - cd frontend
    - yarn install

Unit Test:
  image: node:10-alpine
  stage: test
  script: yarn test:unit
  only:
    changes:
      - frontend/**/*
  before_script:
    - cd frontend
    - yarn install

E2E Test:
  image: cypress/browsers:chrome69
  stage: test
  script:
    - yarn global add wait-on serve
    - yarn build
    - serve -l 8080 dist & wait-on http://localhost:8080
    - npx cypress run
  only:
    changes:
      - frontend/**/*
  before_script:
    - cd frontend
    - yarn install